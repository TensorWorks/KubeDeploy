# -*- mode: ruby -*-
# vi: set ft=ruby :

ROOT_DIR    = File.dirname(File.expand_path(__FILE__))
HACK_DIR = "#{ROOT_DIR}/hack"

VM_APP_DIR = "/home/ubuntu/KubeDeploy"
VM_SHARE_DIR = "/vagrant/.kubedeploy"

CP_NODE_IP = "192.168.56.10"
LNX_WORKER_COUNT = 2

Vagrant.configure("2") do |config|
  # Control plane node configuration
  config.vm.define "control_plane", primary: true do |control_plane|
    control_plane.vm.box = "file://../images/kubernetes/control-plane/build/vagrant/packer_k8s-control-plane_virtualbox.box"

    control_plane.vm.hostname = "control-plane.local"
    control_plane.vm.network "private_network", ip: CP_NODE_IP

    control_plane.vm.provision "shell", privileged: false, env: {
      "CP_NODE_IP" => CP_NODE_IP,
      "VM_APP_DIR": VM_APP_DIR,
      "VM_SHARE_DIR": VM_SHARE_DIR,
    }, inline: <<-SHELL
      "${VM_APP_DIR}/kubeadm-init.sh"

      echo "Environment=\"KUBELET_EXTRA_ARGS=--node-ip=${CP_NODE_IP}\"" | sudo tee -a /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
      sudo systemctl daemon-reload
      sudo systemctl restart kubelet
      sleep 5

      kubectl apply -f "${VM_APP_DIR}/config"

      echo "#!/bin/bash -e" > "${VM_APP_DIR}/join-cluster.sh"
      chmod +x "${VM_APP_DIR}/join-cluster.sh"
      echo -n "sudo " >> "${VM_APP_DIR}/join-cluster.sh"
      kubeadm token create --print-join-command | tr -d "\n" >> "${VM_APP_DIR}/join-cluster.sh"

      mkdir -p "${VM_SHARE_DIR}"
      cp "${VM_APP_DIR}/join-cluster.sh" "${VM_SHARE_DIR}/"
    SHELL
  end

  # Linux worker node configuration
  (1..LNX_WORKER_COUNT).each do |i|
    config.vm.define "linux_worker_#{i}" do |linux_worker|
      linux_worker.vm.box = "file://../images/kubernetes/linux-worker/build/vagrant/packer_k8s-linux-worker_virtualbox.box"

      # Calculate the woker node's IP address
      cp_split_ip = CP_NODE_IP.split(".")
      split_ip = [cp_split_ip[0], cp_split_ip[1], cp_split_ip[2], String(Integer(cp_split_ip[3]) + i)]
      node_ip = split_ip.join(".")

      linux_worker.vm.hostname = "linux-worker-#{i}.local"
      linux_worker.vm.network "private_network", ip: node_ip

      linux_worker.vm.provision "shell", privileged: false, env: {
        "CP_NODE_IP" => CP_NODE_IP,
        "VM_APP_DIR": VM_APP_DIR,
        "VM_SHARE_DIR": VM_SHARE_DIR,
      }, inline: <<-SHELL
        cp "${VM_SHARE_DIR}/join-cluster.sh" "${VM_APP_DIR}/"
        "${VM_APP_DIR}/join-cluster.sh"
      SHELL
    end
  end

  # Common settings
  config.ssh.username = "ubuntu"
  config.ssh.password = "ubuntu"
end
